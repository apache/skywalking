# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '2.1'

services:
  zookeeper:
    image: zookeeper:3.4
    hostname: zookeeper
    expose:
      - 2181
    networks:
      - e2e
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -nz 127.0.0.1 2181"]
      interval: 5s
      timeout: 60s
      retries: 120

  broker-a:
    image: bitnami/kafka:2.4.1
    hostname: broker-a
    expose:
      - 9092
    networks:
      - e2e
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=10
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 60s
      retries: 120

  broker-b:
    image: bitnami/kafka:2.4.1
    hostname: broker-b
    expose:
      - 9092
    networks:
      - e2e
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=24
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 60s
      retries: 120

  oap:
    extends:
      file: ../../../script/docker-compose/base-compose.yml
      service: oap
    environment:
      SW_KAFKA_FETCHER: default
      SW_KAFKA_FETCHER_SERVERS: broker-a:9092,broker-b:9092
      SW_KAFKA_FETCHER_PARTITIONS: 2
      SW_KAFKA_FETCHER_PARTITIONS_FACTOR: 1
      SW_SEARCHABLE_LOGS_TAG_KEYS: level,logger,agent
    depends_on:
      broker-a:
        condition: service_healthy
      broker-b:
        condition: service_healthy
    ports:
    - 12800

  banyandb:
    extends:
      file: ../../../script/docker-compose/base-compose.yml
      service: banyandb
    ports:
      - 17912

  provider:
    extends:
      file: ../../../script/docker-compose/base-compose.yml
      service: provider
    environment:
      SW_GRPC_LOG_SERVER_HOST: sw-satellite
    volumes:
      - /tmp/skywalking-logs/:/tmp/skywalking-logs/
    ports:
    - 9090
    depends_on:
      oap:
        condition: service_healthy
      sw-satellite:
        condition: service_healthy
      filebeat:
        condition: service_healthy
      fluentd:
        condition: service_healthy

  sw-satellite:
    build:
      context: ../../../
      dockerfile: cases/kafka/log/Dockerfile.satellite
      args:
        - SW_AGENT_SATELLITE_COMMIT=${SW_AGENT_SATELLITE_COMMIT}
    networks:
      - e2e
    expose:
      - 11800
    volumes:
      - ./satellite_config.yaml:/skywalking/configs/satellite_config.yaml
    command: ["start"]
    healthcheck:
      test: [ "CMD", "sh", "-c", "nc -z 127.0.0.1 11800" ]
      interval: 5s
      timeout: 60s
      retries: 120
    depends_on:
      oap:
        condition: service_healthy
      broker-a:
        condition: service_healthy
      broker-b:
        condition: service_healthy

  filebeat:
    image: elastic/filebeat:7.12.0
    command: -e --strict.perms=false
    networks:
      - e2e
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /tmp/skywalking-logs/:/tmp/skywalking-logs/
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/5066"]
      interval: 5s
      timeout: 60s
      retries: 120
    depends_on:
      broker-a:
        condition: service_healthy
      broker-b:
        condition: service_healthy

  fluentd:
    build:
      context: ../../../
      dockerfile: cases/kafka/log/Dockerfile.fluentd
    networks:
      - e2e
    volumes:
      - ./fluentd.conf:/opt/bitnami/fluentd/conf/fluentd.conf
      - /tmp/skywalking-logs/:/tmp/skywalking-logs/
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/24220"]
      interval: 5s
      timeout: 60s
      retries: 120
    depends_on:
      broker-a:
        condition: service_healthy
      broker-b:
        condition: service_healthy

networks:
  e2e:
