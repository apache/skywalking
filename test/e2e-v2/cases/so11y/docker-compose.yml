# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '2.1'

services:
  oap:
    extends:
      file: ../../script/docker-compose/base-compose.yml
      service: oap
    environment:
      SW_PROMETHEUS_FETCHER: "default"
      SW_TELEMETRY: prometheus
      SW_METER_ANALYZER_ACTIVE_FILES: satellite
    ports:
      - 12800
      - 1234

  banyandb:
    extends:
      file: ../../script/docker-compose/base-compose.yml
      service: banyandb
    ports:
      - 17912

  provider:
    extends:
      file: ../../script/docker-compose/base-compose.yml
      service: provider
    ports:
      - 9090
    environment:
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: satellite:11800
    depends_on:
      oap:
        condition: service_healthy
      satellite:
        condition: service_healthy

  consumer:
    extends:
      file: ../../script/docker-compose/base-compose.yml
      service: consumer
    ports:
      - 9092
    environment:
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: satellite:11800
    depends_on:
      provider:
        condition: service_healthy

  otel-collector:
    image: otel/opentelemetry-collector:${OTEL_COLLECTOR_VERSION}
    networks:
      - e2e
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    depends_on:
      oap:
        condition: service_healthy

  satellite:
    build:
      context: ../satellite
      dockerfile: Dockerfile.satellite
      args:
        - SW_AGENT_SATELLITE_COMMIT=${SW_AGENT_SATELLITE_COMMIT}
    expose:
      - 11800
    environment:
      SATELLITE_GRPC_CLIENT: oap:11800
      SATELLITE_LOGPIPE_SENDER_MIN_FLUSH_EVENTS: 1
      SW_AGENT_SATELLITE_COMMIT: ${SW_AGENT_SATELLITE_COMMIT}
      SATELLITE_TELEMETRY_EXPORT_TYPE: metrics_service
      SATELLITE_TELEMETRY_METRICS_SERVICE_INTERVAL: 2
      SATELLITE_GRPC_ACCEPT_LIMIT_CPU_UTILIZATION: 100
      SATELLITE_TELEMETRY_METRICS_SERVICE_METRIC_PREFIX: sw_stl_
    networks:
      - e2e
    healthcheck:
      test: [ "CMD", "sh", "-c", "nc -zn 127.0.0.1 11800" ]
      interval: 5s
      timeout: 60s
      retries: 120
    depends_on:
      oap:
        condition: service_healthy

networks:
  e2e:
