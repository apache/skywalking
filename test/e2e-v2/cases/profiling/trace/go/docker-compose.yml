# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '2.1'

services:
  oap:
    image: skywalking/oap:latest
    expose:
      - 11800
      - 12800
      - 10051
      - 5005
    ports:
      - 12800
    networks:
      - e2e
    volumes:
      - ./../../../../script/prepare/setup-oap/download-mysql.sh:/download-mysql.sh
      - ./../../../../script/prepare/setup-oap/log4j2.xml:/skywalking/config/log4j2.xml
    environment:
      SW_HEALTH_CHECKER: default
      SW_CLUSTER_ZK_HOST_PORT: zk:2181
      SW_STORAGE_ES_CLUSTER_NODES: es:9200
      SW_JDBC_URL: jdbc:mysql://mysql:3306/swtest?allowMultiQueries=true
      SW_STORAGE_BANYANDB_TARGETS: banyandb:17912
      SW_CONFIG_ETCD_PERIOD: 1
      SW_CONFIG_ETCD_ENDPOINTS: etcd:2379
      SW_CLUSTER_ETCD_ENDPOINTS: etcd:2379
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/11800"]
      interval: 5s
      timeout: 60s
      retries: 120

  banyandb:
    image: "ghcr.io/apache/skywalking-banyandb:${SW_BANYANDB_COMMIT}"
    networks:
      - e2e
    ports:
      - 17912:17912
      - 17913:17913
    command: standalone --stream-root-path /tmp/stream-data --measure-root-path /tmp/measure-data --measure-metadata-cache-wait-duration 1m --stream-metadata-cache-wait-duration 1m
    healthcheck:
      test: [ "CMD", "sh", "-c", "nc -nz 127.0.0.1 17912" ]
      interval: 5s
      timeout: 60s
      retries: 120

  go-service:
    build:
      context: ../../../go/service
      dockerfile: Dockerfile
      args:
        - SW_AGENT_GO_COMMIT=${SW_AGENT_GO_COMMIT}
    networks:
      - e2e
    expose:
      - 8080
    ports:
      - 8080
    environment:
      SW_AGENT_NAME: go-service
      SW_AGENT_REPORTER_GRPC_BACKEND_SERVICE: oap:11800
      SW_AGENT_REPORTER_GRPC_PROFILE_FETCH_INTERVAL: 1
      SW_AGENT_COLLECTOR_GET_PROFILE_TASK_INTERVAL: 1
      SW_AGENT_COLLECTOR_GET_AGENT_DYNAMIC_CONFIG_INTERVAL: 1
    depends_on:
      oap:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z 127.0.0.1 8080"]
      interval: 5s
      timeout: 60s
      retries: 120

networks:
  e2e:
